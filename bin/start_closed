#!/usr/bin/env python3
import subprocess
import argparse
import time
import sys
import re
import os


attempts = 30
attempt_interval = 1
xy_offset = 10


def spawn(command):
    output = subprocess.call(command, shell=True)


def get_window_id(title_regex):
    """
    Returns the X window id of the window whose title matches regex `title_regex`
    """
    output = subprocess.check_output(["wmctrl", "-l"]).decode("utf-8").splitlines()
    for line in output:
        w_id = line.split()[0]
        title = line.split(" ", 3)[3]
        if re.match(title_regex, title):
            return w_id
    raise Exception(f"Could not find window with title matching regex: {title_regex}")


def get_mouse_coords():
    output = subprocess.check_output(["xdotool", "getmouselocation", "--shell"]).decode("utf-8").splitlines()
    x = int(output[0].split("=")[1])
    y = int(output[1].split("=")[1])
    screen = int(output[2].split("=")[1])
    return (x, y, screen)


def move_mouse(x, y, screen):
    cmd = f"xdotool mousemove --screen {screen} {x} {y}"
    rc = subprocess.call(cmd, shell=True)


def get_close_coords(w_id):
    output = subprocess.check_output(["xdotool", "getwindowgeometry", "--shell", w_id]).decode("utf-8").splitlines()
    width = int(output[3].split("=")[1]) - xy_offset
    height = xy_offset
    return (width, height)


def click(w_id, width, height):
    x, y, screen = get_mouse_coords()
    cmd = f"xdotool mousemove --window {w_id} {width} {height} click 1"
    rc = subprocess.call(cmd, shell=True)
    move_mouse(x, y, screen)


def parse_args():
    parser = argparse.ArgumentParser(formatter_class=argparse.ArgumentDefaultsHelpFormatter)
    parser.add_argument('executable', type=str, help="Executable to run")
    parser.add_argument('title_regex', type=str, help="Regex matching window title")
    parser.add_argument('sleep', type=int, help="Seconds to wait after running executable before closing window  (default: %(default)s)", default=5)
    return parser.parse_args()



if __name__ == "__main__":
    args = parse_args()
    spawn(args.executable)
    time.sleep(args.sleep)
    window_id = get_window_id(args.title_regex)
    width, height = get_close_coords(window_id)
    click(window_id, width, height)
    
